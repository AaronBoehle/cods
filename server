#!/bin/bash

login() {
    ssh $user@$ip
}

# letsencrypt asks us to choose a random minute of the hour to run the renewal
# job
auto_renew_certs() {
    ssh -t $user@$ip '
    grep "/usr/bin/letsencrypt renew"<<< "$(sudo crontab -l)" >/dev/null
    if [[ $? -eq 0 ]]; then
        echo "Already setup to auto renew certs!"
        exit
    fi
    sudo crontab <<< "$(sudo crontab -l)
@daily sleep \$((\${RANDOM} % 60))m; /usr/bin/letsencrypt renew"
    '
}

upload_file() {
    file=$1
    destination=$2

    if [[ -z $file ]]; then
        read -ep 'File to upload: ' file
    fi

    if [[ ! -e $file ]]; then
        echo 'It appears as tough that file does not exist!'
        exit 1
    fi

    scp $file $user@$ip:$destination
}

restart_service() {
    service_name=$1
    if [[ -z $service_name ]]; then
        read -p 'service to restart: ' service_name
    fi
    ssh -t $user@$ip "sudo systemctl restart $service_name"
    [[ $? -eq 0 ]] && echo "$service_name restarted!"
}

reboot_server() {
    ssh -i $user@$ip 'sudo reboot'
}

show_info() {
    cat <<info
Information about your server:

ip address: $ip
login:      $user

MySQL port: 3306
ssh port:   22

info
}

show_usage() {
    cat <<help_message
server -- command for server management

commands

    login
    upload  [file [destination]]
    restart [servicename]
    info
    ping
    autorenew
    reboot

help_message
}

if [[ ! -f .env ]]; then
    echo 'It looks like you do not have a server setup yet, please'
    echo 'run the setup script first.'
    exit 1
fi

source .env

command=$1
shift

case $command in
    login)
        login;;
    upload)
        upload_file $@;;
    restart)
        restart_service $@;;
    reboot)
        reboot_server;;
    info)
        show_info;;
    autorenew)
        auto_renew_certs;;
    ping)
        echo 'Press Ctrl-C to exit.'
        ping -c5 $ip;;
    *)
        show_usage;;
esac
